/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEF_L 0
#define SYM_L 1
#define NUM_L 2

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <200>; };

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        tdz: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <175>;
            bindings = <&kp Z>, <&kp GRAVE>;
        };
    };

    keymap {
        compatible = "zmk,keymap";


/*
 *   ' , . p y   f g c r l   |
 *   a o e u i   d h t n s   |
 *   ; q j k x   b m w v z   |
 */

        default_layer {
            bindings = <
                &kp Q       &kp W      &kp E       &kp R   &kp T         &kp Y            &kp U          &kp I       &kp O      &kp P
                &hm LCTRL A &hm LALT S &hm LGUI D  &kp F   &kp G         &kp H            &kp J          &hm RGUI K  &hm RALT L &hm RCTRL SEMI
                &tdz        &kp X      &kp C       &kp V   &kp B         &kp N            &kp M          &kp COMMA   &kp DOT    &kp FSLH
                                &lt NUM_L TAB  &lt LSHFT SPACE           &lt RSHFT ENTER  &lt SYM_L BKSP
            >;
        };

/*
 *   [ ] { } +   * & a | ^   |
 *   < > ( ) =   - a a a _   |
 *   ~ ! @ # \   / $ % ? .   |
 */
        sym_layer {
            bindings = <
                &kp MINUS      &kp PLUS     &kp LS(MINUS)  &kp LS(PLUS) &kp STAR      &kp STAR  &kp LS(N7)  &kp UARW    &kp LS(BSLH)  &kp LS(N6)

                &kp LS(W)      &kp LS(E)    &kp LS(N9)     &kp LS(N0)   &kp RBKT      &kp QUOT  &kp LARW    &kp DARW    &kp RARW      &kp LS(QUOT)

                &kp TILDE      &kp LS(N1)   &kp LS(N2)     &kp LS(N3)   &kp BSLH      &kp LBKT  &kp LS(N4)  &kp LS(N5)  &kp LS(LBRC)  &trans
                                                                    &trans &trans     &bootloader &trans
            >;
        };

/*
 *   b . . . .   . 7 8 9 .   |
 *   . . . . .   . 4 5 6 0   |
 *   . . . . .   . 1 2 3 .   |
 */

        num_layer {
            bindings = <
                &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR      &trans          &kp N7     &kp N8      &kp N9     &trans
                &kp SEMI   &kp N4     &kp N5      &kp N6          &kp EQUAL             &kp QUOT        &kp N4     &kp N5      &kp N6     &kp N0
                &kp GRAVE  &kp N1     &kp N2      &kp N3          &kp BSLH              &trans          &kp N1     &kp N2      &kp N3     &trans
                                      &trans &bootloader   &trans &trans
            >;
        };

    };
};
